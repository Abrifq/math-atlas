@TYPE SREAL
   @define typ @FLOAT@
   @define pre @f@
@TYPE DREAL
   @define typ @DOUBLE@
   @define pre @d@
@TYPE INT
   @define typ @INT@
   @define pre @i@
@TYPE !
@ROUT addPL macPL
   @define cin @0.0@
@ROUT mulPL
   @define cin @1.0@
@ROUT addPL mulPL macPL
ROUTINE doComp;
   PARAMS :: N;
   INT :: N;
ROUT_LOCALS
   INT :: i;
@ROUT addPL mulPL
   DOUBLE :: scl;
   CONST_INIT :: scl = @(cin);
@ROUT macPL
   DOUBLE :: scl, mul;
   CONST_INIT :: scl = 0.0, mul = 1.0;
@ROUT addPL mulPL macPL
ROUT_BEGIN
   LOOP i = 0, N, 1
   LOOP_BODY
@ROUT addPL
      scl += scl;
@ROUT mulPL
      scl *= scl;
@ROUT macPL
      scl += mul*mul;
@ROUT addPL mulPL macPL
   LOOP_END
   RETURN scl;
ROUT_END
