@PAR YES
   @OP MM
      @define p @_pt@
   @OP ! MM
      @define p @t@
   @OP !
@PAR NO
   @OP MM
      @define p @@
   @OP ! MM
      @define p @s@
   @OP !
@PAR !
@BLAS ATL
   @OP MM
      @define b @_atl@
   @OP ! MM
      @define b @_al_ab@
   @OP !
@BLAS SYS
   @OP MM
      @define b @_sys@
   @OP ! MM
      @define b @sl_sb@
   @OP !
@BLAS !
@OP LU `@define fac @getrf@`
@OP QR `@define fac @geqrf@`
@OP UU `@define fac @potrf@`
@OP LL `@define fac @potrf@`
@OP LU QR UU LL 
   @define tim @x@(pre)@(p)latime@(b)@
   @DIM RANGE
      @define args @-# @(rep) -R 1 @(fac) -N @(N1) @(NN) @(Ninc)@
   @DIM LIST
      @define args @-# @(rep) -R 1 @(fac) -n @(rlist)@
   @DIM !
@OP MM
   @define tim @x@(pre)mmtime@(b)@(p)@
   @DIM RANGE
      @define args @-T 0 -# @(repH) -N @(N1) @(NN) @(Ninc)@
   @DIM LIST
      @error LIST NOT YET SUPPORTED FOR GEMM
   @DIM !
@OP !
@DIM RANGE
   @define runf @@(pre)@(p)@(@op)_@(N1)_@(NN)_@(Ninc).out@
@DIM LIST
   @define runf @@(pre)@(p)@(@op)_${chksum}.out@
@DIM !
if [ ! -f "res/@(runf)" ]
then
   if [ ! -x "${bind}/@(tim)" ]
   then
      cd $bind ; make @(tim)
   fi
   $bind/@(tim) @(args) > res/@(runf)
fi

@DIM RANGE LIST
