@skip
@skip Comments of the ATLAS multi-threaded BLAS L1 implementation      AP00
@skip
@skip Last modification : 08/31/00
@skip
@skip      C      V                      D                             V12345678
@skip
@skip
@define PTM_NOTES          @@(ATLAS_PTM_COMMENT) rout=ptm_notes@
@skip
@skip
@rout ATL_ptrotg
/*
@extract @(PURPOSE)
 *
 * @(rname) constructs a Givens plane rotation.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptrotmg
/*
@extract @(PURPOSE)
 *
 * @(rname) constructs a modified-Givens plane rotation.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptnrm2
/*
@extract @(PURPOSE)
 *
 * @(rname) computes the 2-norm of an n-vector x.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptasum
/*
@extract @(PURPOSE)
 *
 * @12l@(rname)  returns the sum of absolute values of the entries of an
 * n-vector x.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptamax
/*
@extract @(PURPOSE)
 *
 * @(rname)  returns the index in an n-vector x of the first ele-
 * ment having maximum absolute value.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptscal
/*
@extract @(PURPOSE)
 *
 * @(rname) performs the following operation:
 *
 *    x := alpha * x,
 *
 * where alpha is a scalar and x is an n-vector.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptrscal
/*
@extract @(PURPOSE)
 *
 * @(rname) performs the following operation:
 *
 *    x := alpha * x,
 *
 * where alpha is a real scalar and x is an n-vector.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptaxpy
/*
@extract @(PURPOSE)
 *
 * @(rname) performs the following operation:
 *
 *    y := y + alpha * x,
 *
 * where alpha is a scalar and x and y are two n-vectors.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptcopy
/*
@extract @(PURPOSE)
 *
 * @(rname) copies an n-vector x into an n-vector y.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptswap
/*
@extract @(PURPOSE)
 *
 * @(rname) swaps the entries of two n-vectors x and y.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptrot
/*
@extract @(PURPOSE)
 *
 * @(rname) applies a plane rotation to two n-vectors x and y.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptrotm
/*
@extract @(PURPOSE)
 *
 * @(rname) applies a modified-Givens rotation to the two n-vectors
 * x and y.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_ptdot
/*
@extract @(PURPOSE)
 *
 * @(rname) computes the dot-product of two n-vectors x and y.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_dsptdot
/*
@extract @(PURPOSE)
 *
 * @(rname)  returns  the dot product x^T * y of two n-vectors x and
 * y.  The result is internally computed using double precision arithme-
 * tic.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout ATL_sdsptdot
/*
@extract @(PURPOSE)
 *
 * @(rname)  returns the dot product b + x^T * y of two n-vectors x
 * and  y.  The  result  is internally  computed  using double precision
 * arithmetic and casted to a single precision scalar  just before being
 * returned.
 *
@extract @(PTM_NOTES)
 *
@extract @(LINE)
 */
@rout !
@skip
@skip
@undef PTM_NOTES
@skip
@skip
