@ROUT Make.extern
include ../../Make.inc

libd = ../lib
incd = ../include
CCFL = $(CCFLAGS) -Wall -I$(incd)
ext = extract

@multidef rt
   FKO_GetArchInfo FKO_DestroyArchInfo FKO_NumRegs FKO_Veclen 
   FKO_RegtypesAliased FKO_CachelineSize FKO_HasSpecialInst 
   FKO_PipelenADD FKO_PipelenMUL FKO_PipelenMAC FKO_PipelenDIV 
   FKO_TypestrToInt  FKO_InststrToInt FKO_ParseInfoLine 
   FKO_GetOptLoopInfo FKO_DestroyOptLoopInfo
   FKO_GetInstInfo FKO_DestroyInstInfo
@endmultidef
incs = $(incd)/fko_parseinfo.h $(incd)/fko_infoC.h $(incd)/fko_info.h
lib = $(libd)/libfkoinfo.a
@declare "obj = " y y
   @whiledef rt
      @(rt).o
      @define rt1 @@(rt)@
   @endwhile
@enddeclare

$(lib) : $(obj)
	$(AR) $(ARF) $(lib) $(obj)
	$(RANLIB) $(lib)

lib : $(lib)

clean :
	- rm -f $(obj)

@whiledef rt1
@(rt1).o : $(incs) @(rt1).c
	$(CC) $(CCFL) -o @(rt1).o -c @(rt1).c
@endwhile
@skip .c.o: $(incs)
@skip	$(CC) $(CCFL) -c $<

Makefile : ../../ifko.base
	$(ext) -b ../../ifko.base -langM -o Makefile rout=Make.extern
@ROUT make.test
SHELL = /bin/tcsh
CC = gcc
CCFLAGS = -g
IFKO = ../bin/fko
KFLAGS = -U 2

all : ibuild fbuild dbuild hbuild irun frun drun hrun

@beginskip
hbuild : xhtst0 xhtst1 xhtst1
hrun : hbuild
	./xhtst0
	./xhtst1
	./xhtst2

@endskip
@multidef N   17 12 12 5
@whiledef pre i d f h
   @declare "@(pre)build :" y n
      @define i @0@
      @iwhile i < N
          x@(pre)tst@(i)
         @iexp i 1 @(i) +
      @endiwhile
      @undef i
   @enddeclare
@(pre)run:
   @define i @0@
   @iwhile i < N
	./x@(pre)tst@(i)
      @iexp i 1 @(i) +
   @endiwhile
   @undef i

   @define i @0@
   @iwhile i < N
x@(pre)tst@(i) : m@(pre)tst@(i).o @(pre)tst@(i).o
	$(CC) $(CCFLAGS) -o $@ m@(pre)tst@(i).o @(pre)tst@(i).o
      @iexp i 1 @(i) +
   @endiwhile
   @undef i
   @undef N

@endwhile

mitst3.c : mitst0.c
	ln -s mitst0.c mitst3.c
clean:
	rm -f x* *.o *.s
build_comp:
	cd ../bin ; $(MAKE) fko

%.o : %.s
	$(CC) $(CCFLAGS) -c -o $@ $<
%.s : %.b
	$(MAKE) build_comp
	$(IFKO) $(KFLAGS) $< > $@
%.o : %.c
	$(CC) $(CCFLAGS) -c -o $@ $<
@ROUT make.crap
CC = gcc
CCFLAGS = -g
objs = y.tab.o lex.yy.o h2l.o l2a.o inst.o symtab.o arch.o misc.o
HDIR = ../include
heads= $(HDIR)/fko_arch.h $(HDIR)/fko_inst.h $(HDIR)/fko_misc.h \
       $(HDIR)/fko_types.h $(HDIR)/fko_h2l.h $(HDIR)/fko_l2a.h \
       $(HDIR)/fko_symtab.h $(HDIR)/ifko.h

ifko : $(heads) ifko.o $(objs)
	$(CC) $(CCFLAGS) -o $@ ifko.o $(objs) -ll

xtst :  tst.c
	$(CC) $(CCFLAGS) -o $@ tst.c
#arch.o : $(heads) arch.c $(heads)
#	$(CC) $(CCFLAGS) -c arch.c

y.tab.c : y.tab.h
y.tab.h : ../src/hil_gram.y $(heads)
	yacc -v -d ../src/hil_gram.y
lex.yy.c : y.tab.h ../src/hil_lex.l
	lex ../src/hil_lex.l
lex.yy.o : $(heads) lex.yy.c
	$(CC) -I../include $(CCFLAGS) -c lex.yy.c
y.tab.o : $(heads) y.tab.c
	$(CC) -I../include $(CCFLAGS) -c y.tab.c

@whiledef rout ifko h2l l2a inst symtab arch misc
@(rout).o : $(heads) ../src/@(rout).c
	$(CC) -I../include $(CCFLAGS) -c ../src/@(rout).c
@endwhile

clean :
	rm -f $(objs) y.tab.h y.tab.c lex.yy.c ifko.o y.output
