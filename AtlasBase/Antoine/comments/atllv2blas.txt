@skip
@skip Comments of the ATLAS blocked Level 2 BLAS implementation        AP99
@skip
@skip Last modification : 11/15/99
@skip
@skip      C      V                      D                             V12345678
@skip
@rout ATL_sbmv ATL_spmv ATL_symv ATL_hbmv ATL_hpmv ATL_hemv
/*
@extract @(PURPOSE)
 *
 * @(rname) performs the matrix-vector operation
 *
 *    y := alpha * A * x + beta * y,
 *
@rout ATL_sbmv
 * where alpha and beta are scalars, x and y are n-element vectors and A
 * is an n by n symmetric band matrix, with k super-diagonals.
@rout ATL_spmv
 * where alpha and beta are scalars, x and y are n-element vectors and A
 * is an n by n symmetric matrix, supplied in packed form.
@rout ATL_symv
 * where alpha and beta are scalars, x and y are n-element vectors and A
 * is an n by n symmetric matrix.
@rout ATL_hbmv
 * where alpha and beta are scalars, x and y are n-element vectors and A
 * is an n by n Hermitian band matrix, with k super-diagonals.
@rout ATL_hpmv
 * where alpha and beta are scalars, x and y are n-element vectors and A
 * is an n by n Hermitian matrix, supplied in packed form.
@rout ATL_hemv
 * where alpha and beta are scalars, x and y are n-element vectors and A
 * is an n by n Hermitian matrix.
@rout ATL_sbmv ATL_spmv ATL_symv ATL_hbmv ATL_hpmv ATL_hemv
 *
 * This is a blocked version of the algorithm.  For a more detailed des-
 * cription of  the arguments of this function, see the reference imple-
 * mentation in the ATLAS/src/blas/reference directory.
 *
@extract @(LINE)
 */
@rout ATL_tbmv ATL_tpmv ATL_trmv
/*
@extract @(PURPOSE)
 *
 * @(rname) performs one of the matrix-vector operations
 *
 *    x := A * x,   or   x := conjg( A  ) * x,   or
 *
 *    x := A'* x,   or   x := conjg( A' ) * x,
 *
@rout ATL_tbmv
 * where x is an n-element vector and  A is an n by n unit, or non-unit,
 * upper or lower triangular band matrix, with ( k + 1 ) diagonals.
@rout ATL_tpmv
 * where x is an n-element vector and  A is an n by n unit, or non-unit,
 * upper or lower triangular matrix, supplied in packed form.
@rout ATL_trmv
 * where x is an n-element vector and  A is an n by n unit, or non-unit,
 * upper or lower triangular matrix.
@rout ATL_tbmv ATL_tpmv ATL_trmv
 *
 * This is a blocked version of the algorithm.  For a more detailed des-
 * cription of  the arguments of this function, see the reference imple-
 * mentation in the ATLAS/src/blas/reference directory.
 *
@extract @(LINE)
 */
@rout ATL_tbsv ATL_tpsv ATL_trsv
/*
@extract @(PURPOSE)
 *
 * @(rname) solves one of the systems of equations
 *
 *    A * x = b,   or   conjg( A  ) * x = b,   or
 *
 *    A'* x = b,   or   conjg( A' ) * x = b,
 *
@rout ATL_tbsv
 * where b and x are n-element vectors and  A is an n by n unit, or non-
 * unit, upper or lower triangular band matrix, with (k+1) diagonals.
@rout ATL_tpsv
 * where b and x are n-element vectors and  A is an n by n unit, or non-
 * unit, upper or lower triangular matrix, supplied in packed form.
@rout ATL_trsv
 * where b and x are n-element vectors and  A is an n by n unit, or non-
 * unit, upper or lower triangular matrix.
@rout ATL_tbsv ATL_tpsv ATL_trsv
 *
 * No test for  singularity  or  near-singularity  is included  in  this
 * routine. Such tests must be performed before calling this routine.
 *
 * This is a blocked version of the algorithm.  For a more detailed des-
 * cription of  the arguments of this function, see the reference imple-
 * mentation in the ATLAS/src/blas/reference directory.
 *
@extract @(LINE)
 */
@rout ATL_spr ATL_syr ATL_hpr ATL_her
/*
@extract @(PURPOSE)
 *
@rout ATL_spr ATL_syr
 * @(rname) performs the symmetric rank 1 operation
 *
 *    A := alpha * x * x' + A,
@rout ATL_hpr ATL_her
 * @(rname) performs the Hermitian rank 1 operation
 *
 *    A := alpha* x * conjg( x' ) + A,
@rout ATL_spr ATL_syr ATL_hpr ATL_her
 *
@rout ATL_spr
 * where  alpha is a scalar, x is an n-element vector and A is an n by n
 * symmetric matrix, supplied in packed form.
@rout ATL_syr
 * where  alpha is a scalar, x is an n-element vector and A is an n by n
 * symmetric matrix.
@rout ATL_hpr
 * where  alpha is a real scalar, x is an n-element vector and A is an n
 * by n Hermitian matrix, supplied in packed form.
@rout ATL_her
 * where  alpha is a real scalar, x is an n-element vector and A is an n
 * by n Hermitian matrix.
@rout ATL_spr ATL_syr ATL_hpr ATL_her
 *
 * This is a blocked version of the algorithm.  For a more detailed des-
 * cription of  the arguments of this function, see the reference imple-
 * mentation in the ATLAS/src/blas/reference directory.
 *
@extract @(LINE)
 */
@rout ATL_spr2 ATL_syr2 ATL_hpr2 ATL_her2
/*
@extract @(PURPOSE)
 *
@rout ATL_spr2 ATL_syr2
 * @(rname) performs the symmetric rank 2 operation
 *
 *    A := alpha * x * y' + alpha * y * x' + A,
@rout ATL_hpr2 ATL_her2
 * @(rname) performs the Hermitian rank 2 operation
 *
 *    A := alpha * x * conjg( y' ) + y * conjg( alpha * x' ) + A,
@rout ATL_spr2 ATL_syr2 ATL_hpr2 ATL_her2
 *
@rout ATL_spr2
 * where  alpha is a scalar, x and y are n-element vectors and A is an n
 * by n symmetric matrix, supplied in packed form.
@rout ATL_syr2
 * where  alpha is a scalar, x and y are n-element vectors and A is an n
 * by n symmetric matrix.
@rout ATL_hpr2
 * where  alpha is a scalar, x and y are n-element vectors and A is an n
 * by n Hermitian matrix, supplied in packed form.
@rout ATL_her2
 * where  alpha is a scalar, x and y are n-element vectors and A is an n
 * by n Hermitian matrix.
@rout ATL_spr2 ATL_syr2 ATL_hpr2 ATL_her2
 *
 * This is a blocked version of the algorithm.  For a more detailed des-
 * cription of  the arguments of this function, see the reference imple-
 * mentation in the ATLAS/src/blas/reference directory.
 *
@extract @(LINE)
 */
@rout !
